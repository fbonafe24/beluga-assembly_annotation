#!/bin/bash

# -----------------------------------------------
# Step 1: Download PacBio datasets from NCBI SRA
# -----------------------------------------------
# Download data in FASTQ format using fasterq-dump
fasterq-dump SRR25646287 --split-spot -p
fasterq-dump SRR25646288 --split-spot -p
fasterq-dump SRR12673620 --split-spot -p

# -----------------------------------------------
# Step 2: Convert FASTQ to FASTA
# -----------------------------------------------
# Use bioawk to extract sequences from FASTQ
bioawk -c fastx '{print ">"$name"\n"$seq}' SRR25646287.fastq > SRR25646287.fasta
bioawk -c fastx '{print ">"$name"\n"$seq}' SRR25646288.fastq > SRR25646288.fasta
bioawk -c fastx '{print ">"$name"\n"$seq}' SRR12673620.fastq > SRR12673620.fasta

# -----------------------------------------------
# Step 3: Assess read length distribution
# -----------------------------------------------
assembly-stats SRR25646287.fasta
assembly-stats SRR25646288.fasta
assembly-stats SRR12673620.fasta

# -----------------------------------------------
# Step 4: Concatenate all FASTA reads
# -----------------------------------------------
cat SRR12673620.fasta SRR25646287.fasta SRR25646288.fasta > beluga_all.fasta

# -----------------------------------------------
# Step 5: Assemble using Flye (unfiltered full dataset)
# -----------------------------------------------
# Run job script
sbatch flye.sh

# Monitor job status
squeue -u $USER

# View live log
tail flye_29021601.out
tail flye.log

# -----------------------------------------------
# Step 6: Evaluation of Assembly
# -----------------------------------------------

quast assembly.fasta -o Quast/

busco -i assembly.fasta -m genome -l artiodactyla_odb12 -o busco_beluga -c 8

# -----------------------------------------------
# Step 7: Removal of haplotigs
# -----------------------------------------------

minimap2 -x map-pb -t 16 assembly.fasta beluga_all.fastq.gz | gzip -c > beluga_all.paf.gz

pbcstat beluga_all.paf.gz

calcuts PB.stat > cutoffs 2> calcuts.log

split_fa assembly.fasta > assembly.split

minimap2 -xasm5 -DP -t 16 assembly.split assembly.split | gzip -c > assembly.split.self.paf.gz

purge_dups -2 -T cutoffs -c PB.base.cov assembly.split.self.paf.gz > dups.bed 2> purge_dups.log

get_seqs -e dups.bed assembly.fasta

# -----------------------------------------------
# Step 8: Re-evaluation of new assembly
# -----------------------------------------------

busco -i purged.fa -m genome -l artiodactyla_odb12 -o busco_beluga -c 8

# -----------------------------------------------
# Step 9: Blobtoolkit
# -----------------------------------------------

blobtools create --fasta ../purged.fa --taxid 9749 --taxdump taxdump purged_blobdir_dataset

minimap2 -t 16 -x map-pb -a ../purged.fa ../../data/beluga_all.fasta.gz | samtools sort -@ 8 -o longreads.bam
samtools index -c longreads.bam

blobtools add --cov longreads.bam purged_blobdir_dataset

./diamond blastx \
  --query purged.fa \
  --db reference_proteomes.dmnd \
  --outfmt 6 qseqid staxids bitscore sseqid pident length mismatch gapopen qstart qend sstart send evalue \
  --sensitive \
  --max-target-seqs 1 \
  --evalue 1e-25 \
  --threads 10 \
  --log \
  --out purged.diamond.blastx.out


# -----------------------------------------------
# Step 10: Softmasking genome
# -----------------------------------------------

RepeatMasker -species metazoa -s -parallel 10 -xsmall -alignments assembly.fasta
RepeatMasker -species metazoa -s -parallel 10 -xsmall -alignments purged.fa

BuildDatabase -name beluga_assembly assembly.fasta
BuildDatabase -name beluga_purged purged.fa

RepeatModeler -database beluga_assembly -pa 10 -LTRStruct -ninja_dir /hdd1/jlabarcena/frances/bin/NINJA-0.95-cluster_only/NINJA
RepeatModeler -database beluga_purged -pa 10 -LTRStruct -ninja_dir /hdd1/jlabarcena/frances/bin/NINJA-0.95-cluster_only/NINJA

RepeatMasker -lib beluga_assembly-families.fa -s -parallel 16 -xsmall -alignments assembly.fasta.masked
RepeatMasker -lib beluga_purged-families.fa -s -parallel 16 -xsmall -alignments purged.fa.masked


# -----------------------------------------------
# Step 11: Gene annotation
# -----------------------------------------------

#Getting RNASeq data
for SRR in SRR5282288 SRR5282291 SRR5282292 SRR5282298; do   prefetch $SRR;   fasterq-dump $SRR --split-files --threads 4 -p; done
cat SRR5282288_1.fastq SRR5282291_1.fastq SRR5282292_1.fastq SRR5282298_1.fastq > liver_1.fastq
cat SRR5282288_2.fastq SRR5282291_2.fastq SRR5282292_2.fastq SRR5282298_2.fastq > liver_2.fastq

for SRR in SRR5282294 SRR5282295 SRR5282296 SRR5282297; do   prefetch $SRR;   fasterq-dump $SRR --split-files --threads 4 -p; done
cat SRR5282294_1.fastq SRR5282295_1.fastq SRR5282296_1.fastq SRR5282297_1.fastq > brain_1.fastq
cat SRR5282294_2.fastq SRR5282295_2.fastq SRR5282296_2.fastq SRR5282297_2.fastq > brain_2.fastq

cat liver_1.fastq brain_1.fastq > combined_1.fastq
cat liver_2.fastq brain_2.fastq > combined_2.fastq


hisat2-build assembly.fasta.masked.masked assembly
hisat2-build purged.fa.masked.masked purged

hisat2 -x assembly -p 16 -1 /hdd1/jlabarcena/frances/PacBio_Flye/Annotation/RNASeq_data/combined_1.fastq.gz \
-2 /hdd1/jlabarcena/frances/PacBio_Flye/Annotation/RNASeq_data/combined_2.fastq.gz | samtools sort -@ 16 -O BAM -o assembly.bam

hisat2 -x purged -p 16 -1 /hdd1/jlabarcena/frances/PacBio_Flye/Annotation/RNASeq_data/combined_1.fastq.gz \
-2 /hdd1/jlabarcena/frances/PacBio_Flye/Annotation/RNASeq_data/combined_2.fastq.gz | samtools sort -@ 16 -O BAM -o purged.bam

singularity exec \
  --bind ~/frances/PacBio_Flye/Annotation:/mnt \
  /hdd1/jlabarcena/culicoides/Culicoides4_PacBio/braker/braker3.sif \
  braker.pl \
    --species=beluga \
    --bam=/mnt/assembly.bam \
    --genome=/mnt/RepeatMasker/assembly.fasta.masked.masked \
    --prot_seq=/mnt/OrthoDB/Vertebrata.fa \
    --workingdir=/mnt/braker_out_beluga/original_assembly \
    --threads=20 \
    --softmasking

singularity exec \
  --bind ~/frances/PacBio_Flye/Annotation:/mnt \
  /hdd1/jlabarcena/culicoides/Culicoides4_PacBio/braker/braker3.sif \
  braker.pl \
    --species=beluga --useexisting \
    --bam=/mnt/purged.bam \
    --genome=/mnt/RepeatMasker/purged.fa.masked.masked \
    --prot_seq=/mnt/OrthoDB/Vertebrata.fa \
    --workingdir=/mnt/braker_out_beluga/purged_assembly \
    --threads=16 \
    --softmasking

# -----------------------------------------------
# Step 11: Finding PCNA genes (original assembly)
# -----------------------------------------------

makeblastdb -in braker_out_beluga/braker.aa -dbtype prot -out beluga_proteins_db

blastp -query bowhead_pcna_protein.fasta \
       -db db/beluga_proteins_db \
       -out pcna_beluga_blastp.out \
       -evalue 1e-10 \
       -outfmt 6 \
       -max_target_seqs 5 \
       -num_threads 16 \
       > blastp.stdout.log 2> blastp.stderr.log

grep "g2928" ../braker_out_beluga/braker.gtf
grep "g16695" ../braker_out_beluga/braker.gtf
grep -E '(^|[^0-9])g1497(\.t1)?([^0-9]|$)' ../braker_out_beluga/braker.gtf

grep -A5 "g2928.t1" ../braker_out_beluga/braker.aa
grep -A5 "g16695.t1" ../braker_out_beluga/braker.aa
grep -A5 "g1497.t1" ../braker_out_beluga/braker.aa


featureCounts -T 16 -p \
  -a ../braker_out_beluga/braker.gtf \
  -o pcna_counts.txt \
  ../assembly.bam

grep "g2928" pcna_counts.txt
grep "g16695" pcna_counts.txt
grep -E '(^|[^0-9])g1497(\.t1)?([^0-9]|$)' pcna_counts.txt

stringtie ../assembly.bam -p 16 -G ../braker_out_beluga/braker.gtf -o stringtie_assembled.gtf

grep "g2928" stringtie_assembled.gtf
grep "g16695" stringtie_assembled.gtf
grep -E '(^|[^0-9])g1497(\.t1)?([^0-9]|$)' stringtie_assembled.gtf


echo -e "contig_914\t18425339\t18426338\tg16695_promoter\t0\t-" > g16695_promoter.bed


wget https://jaspar.elixir.no/download/data/2024/CORE/JASPAR2024_CORE_vertebrates_non-redundant_pfms_meme.txt

echo -e "contig_914\t18425339\t18426338\tg16695_promoter\t0\t-" > g16695_promoter.bed
bedtools getfasta -fi ../../RepeatMasker/assembly.fasta.masked.masked -bed g16695_promoter.bed -s -name -fo g16695_promoter.fasta
fimo --oc fimo_out motifs.meme g16695_promoter.fasta

grep "^MOTIF" motifs.meme | awk '{print $2"\t"$3}' > motif_map.tsv
join -t $'\t' -1 1 -2 1 <(sort ../../motif_map.tsv) <(sort fimo.txt) > fimo_annotated.txt

echo -e "Pattern_ID\tMotif_Name\tSequence\tStart\tEnd\tStrand\tScore\tP-value\tQ-value\tMatched_Sequence" > header.txt
cat header.txt fimo_annotated.txt > fimo_final.txt
awk 'NR==1 || ($1 !~ /^#/ && $9 <= 0.05)' fimo_final.txt > fimo_05.txt

echo -e "contig_1383\t546719\t547718\tg2928_promoter\t0\t-" > g2928/g2928_promoter.bed
bedtools getfasta -fi ../../RepeatMasker/assembly.fasta.masked.masked -bed g2928_promoter.bed -s -name -fo g2928_promoter.fasta
fimo --oc fimo_out ../motifs.meme g2928_promoter.fasta
awk 'NR==1 || ($1 !~ /^#/ && $9 <= 0.05)' fimo_final.txt > fimo_05.txt



# -----------------------------------------------
# Step 11: Finding PCNA pseudogenes
# -----------------------------------------------

makeblastdb -in ../../RepeatMasker/assembly.fasta.masked.masked -dbtype nucl -out db/beluga_genome_db

tblastn -query ../bowhead_pcna_protein.fasta \
        -db db/beluga_genome_db \
        -evalue 1e-5 \
        -out pcna_pseudogene_tblastn.out \
        -outfmt 6 \
        -num_threads 16 \
        > tblastn.stdout.log 2> tblastn.stderr.log



